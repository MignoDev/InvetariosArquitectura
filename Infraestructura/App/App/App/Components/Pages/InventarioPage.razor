@page "/"
@using AppBlazor.Services
@using AppBlazor.Models
@using ProyectoInventario.Domain.Models


@inject CategoriaService CategoriaService
@inject ProductoService ProductoService
@inject ProveedorService ProveedorService

<PageTitle>Gestión de Inventario</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">Gestión de Inventario</h1>
        </div>
    </div>    
    <!-- Pestañas con Radzen -->
    <div class="row">
        <div class="col-12">            
            <RadzenTabs TabPosition="TabPosition.Top">
                <Tabs>

                <RadzenTabsItem Text="Productos">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h3 class="mb-0">Productos</h3>
                                <button class="btn btn-primary" @onclick="CargarProductos" disabled="@cargando">
                                    @if (cargando)
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-sync"></i>
                                    }
                                    Actualizar
                                </button>
                            </div>
                            <div class="card-body">
                                @if (productos == null)
                                {
                                    <div class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Cargando...</span>
                                        </div>
                                    </div>
                                }
                                else if (productos.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Código</th>
                                                    <th>Nombre</th>
                                                    <th>Precio</th>
                                                    <th>Categoría</th>
                                                    <th>Estado</th>
                                                    <th>Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var producto in productos)
                                                {
                                                    <tr>
                                                        <td>@producto.Codigo</td>
                                                        <td>@producto.Nombre</td>
                                                        <td>@producto.Precio.ToString("C")</td>
                                                        
                                                        <td>
                                                            <span class="badge @(producto.Activo ? "bg-success" : "bg-secondary")">
                                                                @(producto.Activo ? "Activo" : "Inactivo")
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => EditarProducto(producto.Id)">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                                            <button class="btn btn-sm btn-outline-danger" @onclick="() => EliminarProducto(producto.Id)">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle"></i> No hay productos registrados.
                                    </div>
                                }
                            </div>
                        </div>
                    </RadzenTabsItem>
                
                    <RadzenTabsItem Text="Categorías">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h3 class="mb-0">Categorías</h3>
                                <button class="btn btn-primary" @onclick="CargarCategorias" disabled="@cargando">
                                    @if (cargando)
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-sync"></i>
                                    }
                                    Actualizar
                                </button>
                            </div>
                            <div class="card-body">
                                @if (categorias == null)
                                {
                                    <div class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Cargando...</span>
                                        </div>
                                    </div>
                                }
                                else if (categorias.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Nombre</th>
                                                    <th>Descripción</th>
                                                    <th>Estado</th>
                                                    <th>Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var categoria in categorias)
                                                {
                                                    <tr>
                                                        <td>@categoria.Nombre</td>
                                                        <td>@categoria.Descripcion</td>
                                                        <td>
                                                            <span class="badge @(categoria.Activo ? "bg-success" : "bg-secondary")">
                                                                @(categoria.Activo ? "Activo" : "Inactivo")
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => EditarCategoria(categoria.Id)">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                                            @* <button class="btn btn-sm btn-outline-danger" @onclick="() => EliminarCategoria(categoria.Id)">
                                                                <i class="fas fa-trash"></i>
                                                            </button> *@
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle"></i> No hay categorías registradas.
                                    </div>
                                }
                            </div>
                        </div>
                    </RadzenTabsItem>
                
                    <RadzenTabsItem Text="Proveedores">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h3 class="mb-0">Proveedores</h3>
                                <button class="btn btn-primary" @onclick="CargarProveedores" disabled="@cargando">
                                    @if (cargando)
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status"></span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-sync"></i>
                                    }
                                    Actualizar
                                </button>
                            </div>
                            <div class="card-body">
                                @if (proveedores == null)
                                {
                                    <div class="text-center">
                                        <div class="spinner-border" role="status">
                                            <span class="visually-hidden">Cargando...</span>
                                        </div>
                                    </div>
                                }
                                else if (proveedores.Any())
                                {
                                    <div class="table-responsive">
                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Código</th>
                                                    <th>Nombre</th>
                                                    <th>Contacto</th>
                                                    <th>Email</th>
                                                    <th>Teléfono</th>
                                                    <th>Estado</th>
                                                    <th>Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var proveedor in proveedores)
                                                {
                                                    <tr>
                                                        <td>@proveedor.Codigo</td>
                                                        <td>@proveedor.Nombre</td>
                                                        <td>@proveedor.Contacto</td>
                                                        <td>@proveedor.Email</td>
                                                        <td>@proveedor.Telefono</td>
                                                        <td>
                                                            <span class="badge @(proveedor.Activo ? "bg-success" : "bg-secondary")">
                                                                @(proveedor.Activo ? "Activo" : "Inactivo")
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-sm btn-outline-primary" @onclick="() => EditarProveedor(proveedor.Id)">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                                            @* <button class="btn btn-sm btn-outline-danger" @onclick="() => EliminarProveedor(proveedor.Id)">
                                                                <i class="fas fa-trash"></i>
                                                            </button> *@
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle"></i> No hay proveedores registrados.
                                    </div>
                                }
                            </div>
                        </div>
                    </RadzenTabsItem>
                
                    <RadzenTabsItem Text="Movimientos">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="mb-0">Movimientos de Inventario</h3>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle"></i> Funcionalidad de movimientos en desarrollo.
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                
                    <RadzenTabsItem Text="Reportes">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="mb-0">Reportes</h3>
                            </div>
                            <div class="card-body">
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle"></i> Funcionalidad de reportes en desarrollo.
                                </div>
                            </div>
                        </div>
                </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>
        </div>
    </div>
</div>

@code {
    private List<ProductoConStock>? productos;
    private List<Categoria>? categorias;
    private List<Proveedor>? proveedores;
    private bool cargando = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarDatosIniciales();
    }

    private async Task CargarDatosIniciales()
    {
        Console.WriteLine("Iniciando carga de datos iniciales...");
        cargando = true;
        try
        {
            // Cargar datos en paralelo pero sin bloquear la UI
            var tareas = new[]
            {
                CargarProductos(),
                CargarCategorias(),
                CargarProveedores()
            };
            
            await Task.WhenAll(tareas);
            Console.WriteLine("Carga de datos iniciales completada");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error en carga inicial: {ex.Message}");
        }
        finally
        {
            cargando = false;
            StateHasChanged();
        }
    }

    private async Task CargarProductos()
    {
        try
        {
            Console.WriteLine("Iniciando carga de productos...");
            productos = await ProductoService.ObtenerTodosAsync();
            Console.WriteLine($"Productos cargados: {productos.Count}");
            
            StateHasChanged(); // Forzar actualización de la UI
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excepción al cargar productos: {ex.Message}");
            productos = new List<ProductoConStock>();
        }
    }

    private async Task CargarCategorias()
    {
        try
        {
            Console.WriteLine("Iniciando carga de categorías...");
            categorias = await CategoriaService.ObtenerTodasAsync();
            Console.WriteLine($"Categorías cargadas: {categorias.Count}");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excepción al cargar categorías: {ex.Message}");
            categorias = new List<Categoria>();
        }
    }

    private async Task CargarProveedores()
    {
        try
        {
            Console.WriteLine("Iniciando carga de proveedores...");
            proveedores = await ProveedorService.ObtenerTodosAsync();
            Console.WriteLine($"Proveedores cargados: {proveedores.Count}");
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excepción al cargar proveedores: {ex.Message}");
            proveedores = new List<Proveedor>();
        }
    }

    private void EditarProducto(Guid id)
    {
        Console.WriteLine($"Editar producto: {id}");
    }

    private async Task EliminarProducto(Guid id)
    {
        try
        {
            // Nota: El método EliminarAsync no existe en la API actual
            // Por ahora solo mostramos un mensaje
            Console.WriteLine($"Eliminar producto: {id} - Funcionalidad no implementada en la API");
            
            // TODO: Implementar eliminación cuando esté disponible en la API
            // await CargarProductos();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Excepción al eliminar producto: {ex.Message}");
        }
    }

    private void EditarCategoria(Guid id)
    {
        Console.WriteLine($"Editar categoría: {id}");
    }

    

    private void EditarProveedor(Guid id)
    {
        Console.WriteLine($"Editar proveedor: {id}");
    }

    
}
